............
########################################
-new class ..........superHero.cs

  superHero.cs

namespace SuperHeroApi_App
{
    public class superHero
    {
        public int Id { get; set; }
        public string Fame { get; set; }
        public string Firstname { get; set; } 

        public string Lastname { get; set; } 

        public string Place { get; set; }

    }
}


################################################################################
################################################################################


-now create a new controller.....
there are two types ... mvc controll and api controller 

we need the api controller here 
and the name should end with Controller ...


controller
	SuperHeroController.cs

using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;

namespace SuperHeroApi_App.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class SuperHeroController : ControllerBase
    {
    }
}

it's empty now 
we can add
-contructor
-get method etc

########################################

we have 
[HttpGet]
[HttpPost]....all the CRUD 


let's create a get method
 [HttpGet]
        public async Task<IActionResult> Get()
        {
            var heroes = new List<superHero>
            {
                new superHero {
                    Id= 1,
                    Name="Spider Man",
                    Firstname="Peter",
                    Lastname="Parker",
                    Place="New York City"}
            };

            return Ok(heroes);
        }



Ok(heroes) .....status 200
BadRequest(heroes).....status 400
NotFound(heroes).......status 404


return type...IActionResult


return a list of super heroes...return status code 200

################........result..........

controller
	SuperHeroController.cs



using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;

namespace SuperHeroApi_App.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class SuperHeroController : ControllerBase
    {
//...............................................................
        [HttpGet]
        public async Task<IActionResult> Get()
        {
            var heroes = new List<superHero>
            {
                new superHero {
                    Id= 1,
                    Name="Spider Man",
                    Firstname="Peter",
                    Lastname="Parker",
                    Place="New York City"}
            };

            return Ok(heroes);
        }
//...............................................................
    }
}

We cannot see it on the swagger platform because it's a 
generice IActionResult

########################################

if we wish to see our model on the swagger platform
...we have to change the IActionResult
to ActionResult<superHero>

 IActionResult...to .... ActionResult<List<superHero>>

using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;

namespace SuperHeroApi_App.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class SuperHeroController : ControllerBase
    {

        [HttpGet]
//...............................................................
        public async Task<ActionResult<List<superHero>>> Get()
//...............................................................
        {
            var heroes = new List<superHero>
            {
                new superHero {
                    Id= 1,
                    Name="Spider Man",
                    Firstname="Peter",
                    Lastname="Parker",
                    Place="New York City"}
            };

            return Ok(heroes);
        }
    }
}

########################################

NB ... on the swagger platform
we have

SCHEMA.....

-superHero

-WeatherForecast

....................
-superHero was added after changing the IActionResult..to ActionResult<List<superHero>>
-name of class ..superHero.cs

########################################




########################################


########################################

########################################

########################################

########################################

